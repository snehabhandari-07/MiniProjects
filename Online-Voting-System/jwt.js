const jwt = require('jsonwebtoken');
require('dotenv').config();

// const payload = { id: 123 }; payload will have userId generated by mongodb
const secretKey = process.env.SECRET_KEY;
const options = { expiresIn: 30000 };

// To check is incoming req has a Valid JWT  
const jwtAuthMiddleware = (req, res, next) => {
    const authorization = req.headers.authorization;
    if(!authorization) {
        return res.status(401).json({ error: 'Token Not Found' });
    }

    const token = authorization.split(' ')[1];
    if(!token){
        return res.status(401).json({ error: 'Unauthorized' });
    }

    try{
        // Verify the jwt token
        const decoded = jwt.verify(token, process.env.SECRET_KEY);

        // Attach user info that is id to request user
        req.user = decoded;
        
        next();
    }catch(err){
        res.status(401).json({error: "Invalid Token"});
    }
}

const generateToken = (userData) => {
    return jwt.sign(userData, secretKey, options);
}

module.exports = {generateToken, jwtAuthMiddleware}